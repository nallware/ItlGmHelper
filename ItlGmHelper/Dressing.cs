using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ItlGmHelper
{
    class Dressing
    {
        public string RoomDress()
        {
            string dress = RoomName() + Wind() + Items();

            return dress;
        }


        public string RoomName()
        {
            string _name;
            List<string> l = new List<string>();

            l.Add("and appears to have been used as an Antechamber. ");
            l.Add("and appears to have been used as an Entry Room. ");
            l.Add("and appears to have been used as a Secret Room. ");
            l.Add("and appears to have been used as an Armoury. ");
            l.Add("and appears to have been used as a Gallery. ");
            l.Add("and appears to have been used as a Seraglio. ");
            l.Add("and appears to have been used as an Audience Hall. ");
            l.Add("and appears to have been used as a Game Room. ");
            l.Add("and appears to have been used as a Shrine. ");
            l.Add("and appears to have been used as an Aviary. ");
            l.Add("and appears to have been used as a Great Hall. ");
            l.Add("and appears to have been used as a Sitting Room. ");
            l.Add("and appears to have been used as a Banquet. ");
            l.Add("and appears to have been used as a Guardroom. ");
            l.Add("and appears to have been used as a Smithy. ");
            l.Add("and appears to have been used as a Barracks Hall. ");
            l.Add("and appears to have been used as a Solar. ");
            l.Add("and appears to have been used as a Bath. ");
            l.Add("and appears to have been used as a Hallway. ");
            l.Add("and appears to have been used as a Stable. ");
            l.Add("and appears to have been used as a Bedroom. ");
            l.Add("and appears to have been used as a Harem. ");
            l.Add("and appears to have been used as a Storage. ");
            l.Add("and appears to have been used as a Bestiary. ");
            l.Add("and appears to have been used as a Kennel. ");
            l.Add("and appears to have been used as a Strongroom. ");
            l.Add("and appears to have been used as a Boudoir. ");
            l.Add("and appears to have been used as a Kitchen. ");
            l.Add("and appears to have been used as a Study. ");
            l.Add("and appears to have been used as a Cell. ");
            l.Add("and appears to have been used as a Labouratory. ");
            l.Add("and appears to have been used as a Temple. ");
            l.Add("and appears to have been used as a Chantry. ");
            l.Add("and appears to have been used as a Library. ");
            l.Add("and appears to have been used as a Throne Room. ");
            l.Add("and appears to have been used as a Chapel. ");
            l.Add("and appears to have been used as a Lounge. ");
            l.Add("and appears to have been used as a Toilet. ");
            l.Add("and appears to have been used as a Cistern. ");
            l.Add("and appears to have been used as a Meditation Room. ");
            l.Add("and appears to have been used as a Torture Chamber. ");
            l.Add("and appears to have been used as a Classroom. ");
            l.Add("and appears to have been used as an Observatory. ");
            l.Add("and appears to have been used as a Training Room. ");
            l.Add("and appears to have been used as a Closet. ");
            l.Add("and appears to have been used as an Office. ");
            l.Add("and appears to have been used as a Trophy Room. ");
            l.Add("and appears to have been used as a Conjuring Room. ");
            l.Add("and appears to have been used as a Pantry. ");
            l.Add("and appears to have been used as a Vault. ");
            l.Add("and appears to have been used as a Corridor. ");
            l.Add("and appears to have been used as a Pen. ");
            l.Add("and appears to have been used as a Vestibule. ");
            l.Add("and appears to have been used as a Court. ");
            l.Add("and appears to have been used as a Prison. ");
            l.Add("and appears to have been used as a Waiting Room. ");
            l.Add("and appears to have been used as a Crypt. ");
            l.Add("and appears to have been used as a Privy. ");
            l.Add("and appears to have been used as a Water Closet. ");
            l.Add("and appears to have been used as a Dining Room. ");
            l.Add("and appears to have been used as a Reception Room. ");
            l.Add("and appears to have been used as a Well Room. ");
            l.Add("and appears to have been used as a Divination Room. ");
            l.Add("and appears to have been used as a Refectory. ");
            l.Add("and appears to have been used as a Workroom. ");
            l.Add("and appears to have been used as a Dormitory. ");
            l.Add("and appears to have been used as a Robing Room. ");
            l.Add("and appears to have been used as a Workshop. ");
            l.Add("and appears to have been used as a Dressing Room. ");
            l.Add("and appears to have been used as a Salon. ");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _name = value.ToString();
            return _name;
        }

        public string Wind()
        {
            string _wind;
            List<string> l = new List<string>();

            l.Add("The characters will notice " + AirCurrent() + ". ");
            l.Add("The characters will notice " + Odor() + ". ");
            l.Add("The characters will notice " + AirCurrent() + " and " + Odor() + ". ");
            l.Add("");
            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _wind = value.ToString();
            return _wind;
        }




        public string AirCurrent()
        {
            string _airCurrent;
            List<string> l = new List<string>();
            l.Add("there is a slight breeze");
            l.Add("there is a slight breeze");
            l.Add("there is a slight breeze");
            l.Add("there is a slight breeze");
            l.Add("there is a slight breeze");
            l.Add("there is a damp slight breeze");
            l.Add("there is a damp slight breeze");
            l.Add("there is a damp slight breeze");
            l.Add("there is a damp slight breeze");
            l.Add("there is a damp slight breeze");
            l.Add("there is a gusting breeze");
            l.Add("there is a gusting breeze");
            l.Add("there is a cold current of air");
            l.Add("there is a cold current of air");
            l.Add("there is a cold current of air");
            l.Add("there is a cold current of air");
            l.Add("there is a cold current of air");
            l.Add("there is a cold current of air");
            l.Add("there is a slight downdraft");
            l.Add("there is a slight downdraft");
            l.Add("there is a strong downdraft");
            l.Add("there is a strong downdraft");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is still");
            l.Add("the air is cold");
            l.Add("the air is cold");
            l.Add("the air is cold");
            l.Add("the air is cold");
            l.Add("the air is cold");
            l.Add("the air is cold");
            l.Add("the air is cold");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("the air is warm and still");
            l.Add("there is a slight updraft");
            l.Add("there is a slight updraft");
            l.Add("there is a strong updraft");
            l.Add("there is a strong updraft");
            l.Add("there is a strong wind");
            l.Add("there is a strong wind");
            l.Add("there is a strong wind");
            l.Add("there is a strong wind");
            l.Add("there is a strong gusting wind");
            l.Add("there is a strong gusting wind");
            l.Add("there is a strong moaning wind");
            l.Add("there is a strong moaning wind");
            l.Add("there is a strong moaning wind");
            l.Add("there is a strong moaning wind");
            l.Add("there is a strong moaning wind");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _airCurrent = value.ToString();
            return _airCurrent;
        }


        public string Odor()
        {
            string _odor;
            List<string> l = new List<string>();
            l.Add("there is an acrid smell");
            l.Add("there is an acrid smell");
            l.Add("there is an acrid smell");
            l.Add("there is a chlorine smell");
            l.Add("there is a chlorine smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is a dank and mouldy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is an earthy smell");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is the smell of manure");
            l.Add("there is a metallic smell");
            l.Add("there is a metallic smell");
            l.Add("there is a metallic smell");
            l.Add("there is a metallic smell");
            l.Add("there is an ozone smell");
            l.Add("there is an ozone smell");
            l.Add("there is an ozone smell");
            l.Add("there is an ozone smell");
            l.Add("there is a putrid smell");
            l.Add("there is a putrid smell");
            l.Add("there is a putrid smell");
            l.Add("there is a putrid smell");
            l.Add("there is a putrid smell");
            l.Add("there is the smell of rotting vegetation");
            l.Add("there is the smell of rotting vegetation");
            l.Add("there is the smell of rotting vegetation");
            l.Add("there is the smell of rotting vegetation");
            l.Add("there is the smell of rotting vegetation");
            l.Add("there is a salty wet smell");
            l.Add("there is a salty wet smell");
            l.Add("there is a smoky smell");
            l.Add("there is a smoky smell");
            l.Add("there is a smoky smell");
            l.Add("there is a smoky smell");
            l.Add("there is a smoky smell");
            l.Add("there is a stale smell");
            l.Add("there is a stale smell");
            l.Add("there is a stale smell");
            l.Add("there is a stale smell");
            l.Add("there is a stale smell");
            l.Add("there is a feotid smell");
            l.Add("there is a feotid smell");
            l.Add("there is a feotid smell");
            l.Add("there is a sulphur smell");
            l.Add("there is a sulphur smell");
            l.Add("there is a sulphur smell");
            l.Add("there is a sulphur smell");
            l.Add("there is a sulphur smell");
            l.Add("there is a sulphur smell");
            l.Add("there is a urine smell");
            l.Add("there is a urine smell");
            l.Add("there is a urine smell");
            l.Add("there is a urine smell");
            l.Add("there is a urine smell");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _odor = value.ToString();
            return _odor;
        }


        public string Items()
        {
            string item;
            Randomizer r = new Randomizer();
            int num = r.RandNumber(1, 10);
            if (num == 1) { item = "The room contains " + Type() + " scattered about the area."; }
            else if (num == 2) { item = "The room contains " + Type() + "and " + Type() + " scattered about the area."; }
            else if (num == 3) { item = "The room contains " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else if (num == 4) { item = "The room contains " + Type() + ", " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else if (num == 5) { item = "The room contains " + Type() + ", " + Type() + ", " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else if (num == 6) { item = "The room contains " + Type() + ", " + Type() + ", " + Type() + ", " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else if (num == 7) { item = "The room contains " + Type() + ", " + Type() + ",  " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else if (num == 8) { item = "The room contains " + Type() + ", " + Type() + ",  " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else if (num == 9) { item = "The room contains " + Type() + ", " + Type() + ",  " + Type() + ", " + Type() + ", " + Type() + ", " + Type() + " and " + Type() + " scattered about the area."; }
            else { item = "The room contains " + Type() + ", " + Type() + " and " + Type() + " and " + Type() + " scattered about the area."; }
            item += " Characters may also hear " + Noise() + ".";

            return item;
        }


        public string Type()
        {
            string _type;
            List<string> l = new List<string>();

            l.Add(GeneralDressing());
            l.Add(GeneralDeco());
            l.Add(TempleDeco());
            l.Add(TortureDeco());
            l.Add(WizardDeco());
            l.Add(Belonging());
            l.Add(Clothing());
            l.Add(Food());

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _type = value.ToString();
            return _type;

        }





        public string GeneralDressing()
        {
            string _general;
            List<string> l = new List<string>();
            l.Add("ashes");
            l.Add("a badly dented helmet");
            l.Add("a badly dented helmet");
            l.Add("a badly dented helmet");
            l.Add("a bent iron bar");
            l.Add("a bent iron bar");
            l.Add("bits of hair or fur");
            l.Add("a blunted javelin head");
            l.Add("bones");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken arrow");
            l.Add("a broken bottle");
            l.Add("a damp area in the ceiling");
            l.Add("a damp area in the ceiling");
            l.Add("a corroded chain");
            l.Add("a corroded chain");
            l.Add("cobwebs");
            l.Add("cobwebs");
            l.Add("a bent copper coin");
            l.Add("cracks in the ceiling");
            l.Add("cracks in the ceiling");
            l.Add("cracks in the floor");
            l.Add("cracks in the floor");
            l.Add("cracks in the floor");
            l.Add("cracks in the floor");
            l.Add("cracks in the wall");
            l.Add("cracks in the wall");
            l.Add("cracks in the wall");
            l.Add("cracks in the wall");
            l.Add("cracks in the wall");
            l.Add("cracks in the wall");
            l.Add("cracks in the wall");
            l.Add("a cracked flask");
            l.Add("a cracked hammer head");
            l.Add("a cracked hammer head");
            l.Add("a cracked hammer head");
            l.Add("a dagger hilt");
            l.Add("a dagger hilt");
            l.Add("a dagger hilt");
            l.Add("a dagger hilt");
            l.Add("a dagger hilt");
            l.Add("dripping water");
            l.Add("dried blood");
            l.Add("dry leaves and twigs");
            l.Add("dung");
            l.Add("dung");
            l.Add("dung");
            l.Add("dust");
            l.Add("a floor damp");
            l.Add("a food item");
            l.Add("fungi");
            l.Add("guano");
            l.Add("a leather boot");
            l.Add("a lantern");
            l.Add("a lantern");
            l.Add("a lantern");
            l.Add("mould");
            l.Add("mould");
            l.Add("mould");
            l.Add("mould");
            l.Add("a pick handle");
            l.Add("a broken pole or rope");
            l.Add("pottery shards");
            l.Add("rags");
            l.Add("rags");
            l.Add("rats");
            l.Add("rubble");
            l.Add("rubble");
            l.Add("a sack");
            l.Add("scattered teeth or fangs");
            l.Add("scratches on the wall");
            l.Add("slime on the ceiling");
            l.Add("slime on the floor");
            l.Add("slime on the wall");
            l.Add("slime on the wall");
            l.Add("a spike");
            l.Add("sticks");
            l.Add("a shield or armor strap");
            l.Add("straw");
            l.Add("stones");
            l.Add("a sword hilt");
            l.Add("a torch stub");
            l.Add("a torch stub");
            l.Add("wall dampness");
            l.Add("wall dampness");
            l.Add("a puddle or trickle of water");
            l.Add("a puddle or trickle of water");
            l.Add("wax drippings");
            l.Add("a wax blob or candle stub");
            l.Add("wood");
            l.Add("wood");
            l.Add("wood");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _general = value.ToString();
            return _general;
        }


        public string Noise()
        {
            string _noise;
            List<string> l = new List<string>();
            l.Add("banging");
            l.Add("banging");
            l.Add("slaming");
            l.Add("slaming");
            l.Add("banging");
            l.Add("slaming");
            l.Add("a bellowing noise");
            l.Add("a bellowing noise");
            l.Add("a 'bong' noise");
            l.Add("buzzing");
            l.Add("chanting");
            l.Add("chanting");
            l.Add("chiming");
            l.Add("chirping");
            l.Add("clanking");
            l.Add("clashing");
            l.Add("clicking");
            l.Add("coughing");
            l.Add("creaking");
            l.Add("creaking");
            l.Add("drumming");
            l.Add("footsteps ahead");
            l.Add("footsteps ahead");
            l.Add("footsteps ahead");
            l.Add("footsteps ahead");
            l.Add("footsteps approaching");
            l.Add("footsteps approaching");
            l.Add("footsteps approaching");
            l.Add("a snapping noise");
            l.Add("footsteps behind");
            l.Add("footsteps behind");
            l.Add("footsteps behind");
            l.Add("footsteps receding");
            l.Add("footsteps receding");
            l.Add("footsteps to the side");
            l.Add("footsteps to the side");
            l.Add("faint giggling");
            l.Add("faint giggling");
            l.Add("a gong");
            l.Add("grating");
            l.Add("grating");
            l.Add("grating");
            l.Add("groaning");
            l.Add("groaning");
            l.Add("grunting");
            l.Add("hissing");
            l.Add("hissing");
            l.Add("hooting");
            l.Add("a trumpet");
            l.Add("howling");
            l.Add("humming");
            l.Add("jingling");
            l.Add("knocking");
            l.Add("knocking");
            l.Add("knocking");
            l.Add("knocking");
            l.Add("laughter");
            l.Add("laughter");
            l.Add("moaning");
            l.Add("moaning");
            l.Add("murmuring");
            l.Add("murmuring");
            l.Add("murmuring");
            l.Add("music");
            l.Add("rattling");
            l.Add("ringing");
            l.Add("roaring");
            l.Add("rustling");
            l.Add("rustling");
            l.Add("rustling");
            l.Add("rustling");
            l.Add("scratching");
            l.Add("scratching");
            l.Add("scrabbling");
            l.Add("scrabbling");
            l.Add("screaming");
            l.Add("screaming");
            l.Add("scuttling");
            l.Add("scuttling");
            l.Add("scuttling");
            l.Add("shuffling");
            l.Add("slithering");
            l.Add("slithering");
            l.Add("sneezing");
            l.Add("sobbing");
            l.Add("splashing");
            l.Add("splintering");
            l.Add("squeaking");
            l.Add("squeaking");
            l.Add("squealing");
            l.Add("tapping");
            l.Add("tapping");
            l.Add("a thud");
            l.Add("a thud");
            l.Add("thumping");
            l.Add("thumping");
            l.Add("tinkling");
            l.Add("twanging");
            l.Add("whining");
            l.Add("whispering");
            l.Add("whistling");
            l.Add("whistling");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _noise = value.ToString();
            return _noise;
        }


        public string GeneralDeco()
        {
            string _furnishing;
            List<string> l = new List<string>();
            l.Add("an altar");
            l.Add("an armchair");
            l.Add("an armoire");
            l.Add("an arras");
            l.Add("a bag");
            l.Add("a barrel");
            l.Add("a bed");
            l.Add("a bed");
            l.Add("a bench");
            l.Add("a blanket");
            l.Add("a box");
            l.Add("a brazier");
            l.Add("a bucket");
            l.Add("a buffet");
            l.Add("bunks");
            l.Add("a barrel");
            l.Add("a cabinet");
            l.Add("a candelabrum");
            l.Add("a carpet");
            l.Add("a cask");
            l.Add("a cauldron");
            l.Add("a chandelier");
            l.Add("some charcoal");
            l.Add("a chair");
            l.Add("a chair");
            l.Add("a chest");
            l.Add("a chest of drawers");
            l.Add("some coal");
            l.Add("a couch");
            l.Add("a crate");
            l.Add("a cresset");
            l.Add("a cupboard");
            l.Add("a cupboard");
            l.Add("a cushion");
            l.Add("a dais");
            l.Add("a desk");
            l.Add("a fireplace with wood");
            l.Add("a fireplace and mantle");
            l.Add("a firkin");
            l.Add("a fountain");
            l.Add("a fountain");
            l.Add("a fountain");
            l.Add("a fresco");
            l.Add("a grindstone");
            l.Add("a hammock");
            l.Add("a hamper");
            l.Add("a hogshead");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("a kettle");
            l.Add("a loom");
            l.Add("a mat");
            l.Add("a mattress");
            l.Add("a mural");
            l.Add("an oven");
            l.Add("a pail");
            l.Add("a painting");
            l.Add("a pallet");
            l.Add("a pallet");
            l.Add("a pallet");
            l.Add("some pans");
            l.Add("a pedestal");
            l.Add("a pedestal");
            l.Add("a pedestal");
            l.Add("pegs");
            l.Add("a pillow");
            l.Add("some pots");
            l.Add("a quilt");
            l.Add("a quilt");
            l.Add("a quilt");
            l.Add("a rug");
            l.Add("rushes");
            l.Add("a sack");
            l.Add("a sconce");
            l.Add("a screen");
            l.Add("a sheet");
            l.Add("a sheet");
            l.Add("a shelf");
            l.Add("a shrine");
            l.Add("a sideboard");
            l.Add("a sofa");
            l.Add("a spinning wheel");
            l.Add("a staff");
            l.Add("a stand");
            l.Add("a statue");
            l.Add("a stool");
            l.Add("a table");
            l.Add("a table");
            l.Add("a tapestry");
            l.Add("a throne");
            l.Add("a trestle");
            l.Add("a trunk");
            l.Add("a tub");
            l.Add("a tun");
            l.Add("some cooking utensils");
            l.Add("an urn");
            l.Add("a wall basin and font");
            l.Add("a wardrobe");
            l.Add("wood billets");
            l.Add("a workbench");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _furnishing = value.ToString();
            return _furnishing;
        }


        public string TempleDeco()
        {
            string _religious;
            List<string> l = new List<string>();
            l.Add("an altar");
            l.Add("an altar");
            l.Add("an altar");
            l.Add("an altar");
            l.Add("an altar");
            l.Add("a bell");
            l.Add("a bell");
            l.Add("a bell");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a candelabrum");
            l.Add("some candles");
            l.Add("some candles");
            l.Add("some candlesticks");
            l.Add("some cassocks");
            l.Add("a chime");
            l.Add("an altar cloth");
            l.Add("an altar cloth");
            l.Add("columns");
            l.Add("columns");
            l.Add("pillars");
            l.Add("pillars");
            l.Add("a curtain");
            l.Add("a tapestry");
            l.Add("drums");
            l.Add("a font");
            l.Add("a font");
            l.Add("a gong");
            l.Add("a gong");
            l.Add("a holy symbol");
            l.Add("a holy symbol");
            l.Add("a holy symbol");
            l.Add("a holy symbol");
            l.Add("a holy symbol");
            l.Add("a holy symbol");
            l.Add("a holy writings");
            l.Add("a holy writings");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an incense burner");
            l.Add("an incense burner");
            l.Add("an incense burner");
            l.Add("an incense burner");
            l.Add("an incense burner");
            l.Add("a kneeling bench");
            l.Add("a lamp");
            l.Add("a lamp");
            l.Add("some lamps");
            l.Add("some lamps");
            l.Add("a lectern");
            l.Add("a lectern");
            l.Add("an offertory container");
            l.Add("an offertory container");
            l.Add("an offertory container");
            l.Add("paintings");
            l.Add("frescoes");
            l.Add("pews");
            l.Add("pews");
            l.Add("pipes");
            l.Add("a prayer rug");
            l.Add("a pulpit");
            l.Add("a rail");
            l.Add("robes");
            l.Add("robes");
            l.Add("a sanctuary");
            l.Add("a sanctuary");
            l.Add("a screen");
            l.Add("a screen");
            l.Add("a shrine");
            l.Add("a shrine");
            l.Add("a shrine");
            l.Add("a shrine");
            l.Add("a shrine");
            l.Add("a side chair");
            l.Add("a stand");
            l.Add("a stand");
            l.Add("a statue");
            l.Add("a statue");
            l.Add("a statue");
            l.Add("a throne");
            l.Add("a thurible");
            l.Add("a thurible");
            l.Add("a tripod");
            l.Add("a tripod");
            l.Add("a tripod");
            l.Add("a vestry");
            l.Add("a vestry");
            l.Add("vestments");
            l.Add("vestments");
            l.Add("vestments");
            l.Add("vestments");
            l.Add("vestments");
            l.Add("vestments");
            l.Add("vestments");
            l.Add("a votive light");
            l.Add("a votive light");
            l.Add("a whistle");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _religious = value.ToString();
            return _religious;
        }


        public string TortureDeco()
        {
            string _torture;
            List<string> l = new List<string>();
            l.Add("bastinadoes");
            l.Add("bastinadoes");
            l.Add("a huge bell");
            l.Add("a bench");
            l.Add("a bench");
            l.Add("a bench");
            l.Add("iron boots");
            l.Add("iron boots");
            l.Add("iron boots");
            l.Add("iron boots");
            l.Add("branding irons");
            l.Add("branding irons");
            l.Add("branding irons");
            l.Add("branding irons");
            l.Add("branding irons");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a cage");
            l.Add("a cage");
            l.Add("chains");
            l.Add("chains");
            l.Add("chains");
            l.Add("chains");
            l.Add("a chair with straps");
            l.Add("clamps");
            l.Add("cressets");
            l.Add("cressets");
            l.Add("cressets");
            l.Add("fetters");
            l.Add("a fire pit");
            l.Add("a fire pit");
            l.Add("a fire pit");
            l.Add("a grill");
            l.Add("hooks");
            l.Add("hooks");
            l.Add("an iron maiden");
            l.Add("an iron maiden");
            l.Add("an iron maiden");
            l.Add("an iron maiden");
            l.Add("an iron maiden");
            l.Add("knives");
            l.Add("manacles");
            l.Add("an oubliette");
            l.Add("oil");
            l.Add("oil");
            l.Add("a pillory");
            l.Add("a pillory");
            l.Add("pincers");
            l.Add("pincers");
            l.Add("pincers");
            l.Add("pincers");
            l.Add("pliers");
            l.Add("pliers");
            l.Add("a huge pot");
            l.Add("a huge pot");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("a rack");
            l.Add("ropes");
            l.Add("ropes");
            l.Add("stocks");
            l.Add("a stool");
            l.Add("a stool");
            l.Add("a strappado");
            l.Add("a strappado");
            l.Add("a strappado");
            l.Add("a strappado");
            l.Add("straw");
            l.Add("straw");
            l.Add("straw");
            l.Add("a table");
            l.Add("a table");
            l.Add("thongs");
            l.Add("thumb screws");
            l.Add("thumb screws");
            l.Add("thumb screws");
            l.Add("thumb screws");
            l.Add("torches");
            l.Add("torches");
            l.Add("torches");
            l.Add("a U Rack");
            l.Add("a U Rack");
            l.Add("a vice");
            l.Add("a well");
            l.Add("a well");
            l.Add("a wheel");
            l.Add("a wheel");
            l.Add("a wheel");
            l.Add("whips");
            l.Add("whips");
            l.Add("whips");
            l.Add("a cat-o-nine tails");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _torture = value.ToString();
            return _torture;
        }


        public string WizardDeco()
        {
            string _alchemy;
            List<string> l = new List<string>();
            l.Add("an alembic");
            l.Add("an alembic");
            l.Add("an alembic");
            l.Add("a balance and weights");
            l.Add("a balance and weights");
            l.Add("a beaker");
            l.Add("a beaker");
            l.Add("a beaker");
            l.Add("a beaker");
            l.Add("bellows");
            l.Add("a bladder");
            l.Add("a bottle");
            l.Add("a bottle");
            l.Add("a book");
            l.Add("a book");
            l.Add("a book");
            l.Add("a bowl");
            l.Add("a box");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a brazier");
            l.Add("a cage");
            l.Add("a cauldron");
            l.Add("a cauldron");
            l.Add("a candle");
            l.Add("a candlestick");
            l.Add("a carafe");
            l.Add("chalk");
            l.Add("chalk");
            l.Add("a crucible");
            l.Add("a cruet");
            l.Add("a crystal ball");
            l.Add("a decanter");
            l.Add("a desk");
            l.Add("a dish");
            l.Add("a flask");
            l.Add("a flask");
            l.Add("a funnel");
            l.Add("a furnace");
            l.Add("herbs");
            l.Add("herbs");
            l.Add("herbs");
            l.Add("herbs");
            l.Add("a horn");
            l.Add("an hourglass");
            l.Add("a jar");
            l.Add("a jar");
            l.Add("a jug");
            l.Add("a kettle");
            l.Add("a ladle");
            l.Add("a lamp");
            l.Add("a lamp");
            l.Add("a magic circle");
            l.Add("a mortar and pestle");
            l.Add("a pan");
            l.Add("parchment");
            l.Add("parchment");
            l.Add("a pentacle");
            l.Add("a pentagram");
            l.Add("a phial");
            l.Add("a pipette");
            l.Add("a pot");
            l.Add("a prism");
            l.Add("a quill");
            l.Add("a retort");
            l.Add("a retort");
            l.Add("a retort");
            l.Add("a stirring rod");
            l.Add("a mixing rod");
            l.Add("a scroll");
            l.Add("a scroll");
            l.Add("a scroll tube");
            l.Add("a sheet");
            l.Add("a skin");
            l.Add("a skull");
            l.Add("a spatula");
            l.Add("a measuring spoon");
            l.Add("a stand");
            l.Add("a stool");
            l.Add("a stuffed animal");
            l.Add("a tank container");
            l.Add("tongs");
            l.Add("a tripod");
            l.Add("a tube");
            l.Add("a tube");
            l.Add("a tube");
            l.Add("tweezers");
            l.Add("a vial");
            l.Add("a vial");
            l.Add("a vial");
            l.Add("a water clock");
            l.Add("wire");
            l.Add("a workbench");
            l.Add("a workbench");
            l.Add("a workbench");
            l.Add("a workbench");
            l.Add("a workbench");
            l.Add("a workbench");
            l.Add("a workbench");
            l.Add("a workbench");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _alchemy = value.ToString();
            return _alchemy;
        }


        public string VialMatter()
        {
            string _contents;
            List<string> l = new List<string>();
            l.Add("ashes");
            l.Add("ashes");
            l.Add("ashes");
            l.Add("bark");
            l.Add("bark");
            l.Add("bark");
            l.Add("bone shards");
            l.Add("bone");
            l.Add("some bones");
            l.Add("chunks");
            l.Add("chunks");
            l.Add("chunks");
            l.Add("chunks");
            l.Add("chunks");
            l.Add("cinders");
            l.Add("cinders");
            l.Add("cinders");
            l.Add("crystals");
            l.Add("crystals");
            l.Add("crystals");
            l.Add("crystals");
            l.Add("crystals");
            l.Add("dust");
            l.Add("dust");
            l.Add("dust");
            l.Add("dust");
            l.Add("fibres");
            l.Add("fibres");
            l.Add("gelatin");
            l.Add("gelatin");
            l.Add("gelatin");
            l.Add("globes");
            l.Add("globes");
            l.Add("grains");
            l.Add("grains");
            l.Add("grains");
            l.Add("grains");
            l.Add("greasy");
            l.Add("greasy");
            l.Add("greasy");
            l.Add("husks");
            l.Add("husks");
            l.Add("husks");
            l.Add("leaves");
            l.Add("leaves");
            l.Add("leaves");
            l.Add("leaves");
            l.Add("leaves");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("liquid");
            l.Add("lump");
            l.Add("lump");
            l.Add("an oily substance");
            l.Add("an oily substance");
            l.Add("an oily substance");
            l.Add("paste");
            l.Add("paste");
            l.Add("paste");
            l.Add("paste");
            l.Add("pellets");
            l.Add("pellets");
            l.Add("pellets");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("powder");
            l.Add("a semi-liquid substance");
            l.Add("a semi-liquid substance");
            l.Add("ribbons of skin");
            l.Add("creature hide");
            l.Add("splinters");
            l.Add("splinters");
            l.Add("stalks");
            l.Add("stalks");
            l.Add("strands");
            l.Add("strands");
            l.Add("strands");
            l.Add("strips");
            l.Add("strips");
            l.Add("strips");
            l.Add("viscous liquid");
            l.Add("viscous liquid");
            l.Add("viscous liquid");
            l.Add("viscous liquid");
            l.Add("viscous liquid");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _contents = value.ToString();
            return _contents;
        }


        public string Belonging()
        {
            string _personal;
            List<string> l = new List<string>();
            l.Add("an awl");
            l.Add("bandages");
            l.Add("a basin");
            l.Add("a basket");
            l.Add("a basket");
            l.Add("a beater");
            l.Add("a book");
            l.Add("a bottle");
            l.Add("a bottle");
            l.Add("a bowl");
            l.Add("a small box");
            l.Add("a brush");
            l.Add("a brush");
            l.Add("a candle");
            l.Add("a candle snuffer");
            l.Add("a candlestick");
            l.Add("a walking cane");
            l.Add("a case");
            l.Add("a small casket");
            l.Add("a chopper");
            l.Add("a coffer");
            l.Add("cologne");
            l.Add("a comb");
            l.Add("a cup");
            l.Add("a decanter");
            l.Add("a dipper");
            l.Add("a dish");
            l.Add("an earspoon");
            l.Add("an ewer");
            l.Add("a flagon");
            l.Add("a flask");
            l.Add("food");
            l.Add("a fork");
            l.Add("a grater");
            l.Add("a grinder");
            l.Add("an hourglass");
            l.Add("a jack");
            l.Add("a jar");
            l.Add("a jug");
            l.Add("a kettle");
            l.Add("a knife");
            l.Add("knucklebones");
            l.Add("a ladle");
            l.Add("a lamp");
            l.Add("a lantern");
            l.Add("a masher");
            l.Add("a mirror");
            l.Add("a mug");
            l.Add("a needle and thread");
            l.Add("a needle and thread");
            l.Add("fuel oil");
            l.Add("scented oil");
            l.Add("a pan");
            l.Add("parchment");
            l.Add("a pitcher");
            l.Add("musical pipes");
            l.Add("a smoking pipe");
            l.Add("a plate");
            l.Add("a platter");
            l.Add("a pot");
            l.Add("a pouch");
            l.Add("a puff");
            l.Add("a quill");
            l.Add("a razor");
            l.Add("salve");
            l.Add("rope");
            l.Add("a scraper");
            l.Add("a scroll");
            l.Add("a shaker");
            l.Add("a sifter");
            l.Add("soap");
            l.Add("a spigot");
            l.Add("a spoon");
            l.Add("a stopper");
            l.Add("a statuette or figurine");
            l.Add("a strainer");
            l.Add("a tankard");
            l.Add("thongs");
            l.Add("thread");
            l.Add("a tinderbox");
            l.Add("a tinderbox");
            l.Add("a tinderbox");
            l.Add("a tinderbox");
            l.Add("a towel");
            l.Add("a towel");
            l.Add("a tray");
            l.Add("a trivet");
            l.Add("a tureen");
            l.Add("twine");
            l.Add("twine");
            l.Add("unguent");
            l.Add("a vase");
            l.Add("a vial");
            l.Add("a wallet");
            l.Add("a washcloth");
            l.Add("a whetstone");
            l.Add("a wig");
            l.Add("wool");
            l.Add("yarn");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _personal = value.ToString();
            return _personal;
        }


        public string Clothing()
        {
            string _clothing;
            List<string> l = new List<string>();

            l.Add("an apron");
            l.Add("an apron");
            l.Add("a belt");
            l.Add("a belt");
            l.Add("a blouse");
            l.Add("boots");
            l.Add("boots");
            l.Add("boots");
            l.Add("buskins");
            l.Add("a cap");
            l.Add("a cap");
            l.Add("a cap");
            l.Add("a cloak");
            l.Add("a cloak");
            l.Add("a cloak");
            l.Add("a cloak");
            l.Add("a coat");
            l.Add("a coat");
            l.Add("a coif");
            l.Add("a doublet");
            l.Add("a dress");
            l.Add("a dress");
            l.Add("a frock");
            l.Add("a pinafore");
            l.Add("gauntlets");
            l.Add("gauntlets");
            l.Add("a girdle");
            l.Add("a girdle");
            l.Add("gloves");
            l.Add("a gown");
            l.Add("a gown");
            l.Add("a hat");
            l.Add("a hat");
            l.Add("a hat");
            l.Add("a habit");
            l.Add("a hood");
            l.Add("a hood");
            l.Add("a hood");
            l.Add("a hood");
            l.Add("hose");
            l.Add("hose");
            l.Add("a jerkin");
            l.Add("a jerkin");
            l.Add("a jerkin");
            l.Add("a kerchief");
            l.Add("a kerchief");
            l.Add("a kirtle");
            l.Add("a kirtle");
            l.Add("leggings");
            l.Add("leggings");
            l.Add("linen drawers");
            l.Add("silk drawers");
            l.Add("satin drawers");
            l.Add("linen drawers");
            l.Add("a linen undershirt");
            l.Add("a silk undershirt");
            l.Add("a satin undershirt");
            l.Add("a linen undershirt");
            l.Add("a mantle");
            l.Add("pantaloons");
            l.Add("a petticoat");
            l.Add("a petticoat");
            l.Add("a petticoat");
            l.Add("a pouch");
            l.Add("a pouch");
            l.Add("a pouch");
            l.Add("a pouch");
            l.Add("a purse");
            l.Add("a purse");
            l.Add("a purse");
            l.Add("sandals");
            l.Add("sandals");
            l.Add("sandals");
            l.Add("sandals");
            l.Add("a scarf");
            l.Add("a scarf");
            l.Add("a shawl");
            l.Add("a shift");
            l.Add("a shift");
            l.Add("slippers");
            l.Add("slippers");
            l.Add("slippers");
            l.Add("slippers");
            l.Add("a smock");
            l.Add("a smock");
            l.Add("a smock");
            l.Add("stockings");
            l.Add("stockings");
            l.Add("stockings");
            l.Add("a surcoat");
            l.Add("a toga");
            l.Add("trousers");
            l.Add("trousers");
            l.Add("trousers");
            l.Add("a tunic");
            l.Add("a tunic");
            l.Add("a veil");
            l.Add("a vest");
            l.Add("a vest");
            l.Add("a wrapper");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _clothing = value.ToString();
            return _clothing;
        }


        public string Food()
        {
            string _food;
            List<string> l = new List<string>();

            l.Add("a skin of strong ale");
            l.Add("a skin of ale");
            l.Add("a bag of dried apricots");
            l.Add("a sack with apples");
            l.Add("a few apples");
            l.Add("a bag of beans");
            l.Add("a jack of beer");
            l.Add("a small keg of blackbeer");
            l.Add("a small keg of spiced beer");
            l.Add("a cask of watered beer");
            l.Add("a small basket of berries");
            l.Add("a leather sack of biscuits");
            l.Add("a small flask of brandy");
            l.Add("elvish waybread");
            l.Add("a sack of dwarven beer bread");
            l.Add("a bag with hardtack bread");
            l.Add("a cloth wrapped loaf of yeast bread");
            l.Add("a cloth wrapped flatbread");
            l.Add("a skin of broth");
            l.Add("a wooden box of butter");
            l.Add("a few cakes");
            l.Add("a bag containing farmers cheese");
            l.Add("a wedge of aged cheese");
            l.Add("a slice of smoked cheese");
            l.Add("a bag of cookies");
            l.Add("a bag of eggs");
            l.Add("a sack containing dried fish");
            l.Add("scraps of shellfish");
            l.Add("some moldy fowl");
            l.Add("a dead game fowl");
            l.Add("a branch of grapes");
            l.Add("a sack of greens");
            l.Add("a bowl of gruel");
            l.Add("a bottle of honey");
            l.Add("a crock of jam");
            l.Add("a pot of jelly");
            l.Add("a basket of leeks");
            l.Add("a sack of lentils");
            l.Add("a skin of honey mead");
            l.Add("a skin of elven mead");
            l.Add("a bottle of herb mead");
            l.Add("a bottle of mead");
            l.Add("a sack of grain meal");
            l.Add("a sack of grain meal");
            l.Add("a sack of grain meal");
            l.Add("a sack of grain meal");
            l.Add("a hank of venison");
            l.Add("a cut of mutton");
            l.Add("a slice of roast");
            l.Add("a leather bag of dried meat");
            l.Add("a sack with dried squirrel");
            l.Add("a sack of smoked fish");
            l.Add("a cured ham");
            l.Add("cured meat in a bag");
            l.Add("smoked rabbit in a sack");
            l.Add("a hank of roast goat");
            l.Add("a crock of milk");
            l.Add("a sack of muffins");
            l.Add("a basket of mushrooms");
            l.Add("a bag of nuts");
            l.Add("a sack of nuts");
            l.Add("a box of nuts");
            l.Add("a small crate of onions");
            l.Add("a sack of onions");
            l.Add("a box of pastries");
            l.Add("a box of fresh peaches");
            l.Add("a sack of bruised pears");
            l.Add("a bag of peas");
            l.Add("a crock of pickles");
            l.Add("a box containing pie");
            l.Add("a small crate of plums");
            l.Add("a crock of porridge");
            l.Add("a wooden bowl of porridge");
            l.Add("a wooden bowl of porridge");
            l.Add("a sack of prunes");
            l.Add("a crock of pudding");
            l.Add("a sack of raisins");
            l.Add("a crock of partridge soup");
            l.Add("a crock of leek soup");
            l.Add("a crock of potato soup");
            l.Add("a crock of rabbit stew");
            l.Add("a crock of duck stew");
            l.Add("a small wooden box of sweetmeats");
            l.Add("a small wooden box of lemongrass tea");
            l.Add("a small wooden box of elven tea");
            l.Add("a small wooden box of herbal tea");
            l.Add("a small wooden box of tea");
            l.Add("a sack of tubers");
            l.Add("a sack of roots");
            l.Add("a skin of water");
            l.Add("a skin of water");
            l.Add("a skin of water");
            l.Add("a skin of water");
            l.Add("a bucket of water");
            l.Add("a bucket of water");
            l.Add("a skin of firewine");
            l.Add("a skin of bloodwine");
            l.Add("a bottle of elvish wine");
            l.Add("a skin of orcish vinegar-wine");
            l.Add("a bottle of goblin wine");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _food = value.ToString();
            return _food;
        }

        public string Spice()
        {
            string _spices;
            List<string> l = new List<string>();

            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("garlic");
            l.Add("parsley");
            l.Add("cilantro");
            l.Add("rosemary");
            l.Add("anise");
            l.Add("basil");
            l.Add("mustard");
            l.Add("caraway");
            l.Add("cardamom");
            l.Add("celery seed");
            l.Add("chicory");
            l.Add("chili pepper");
            l.Add("cinnamon");
            l.Add("clove");
            l.Add("cumin");
            l.Add("curry");
            l.Add("dill");
            l.Add("fennel");
            l.Add("ginger");
            l.Add("horseradish");
            l.Add("juniper berry");
            l.Add("lemongrass");
            l.Add("licorice");
            l.Add("mace");
            l.Add("marjoram");
            l.Add("mint");
            l.Add("nutmeg");
            l.Add("oregano");
            l.Add("paprika");
            l.Add("safflower");
            l.Add("saffron");
            l.Add("sage");
            l.Add("tarragon");
            l.Add("savory");
            l.Add("turmeric");
            l.Add("thyme");
            l.Add("sumac");
            l.Add("mustard");
            l.Add("mustard");
            l.Add("mustard");
            l.Add("mustard");
            l.Add("pepper");
            l.Add("pepper");
            l.Add("pepper");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("salt");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");
            l.Add("vinegar");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _spices = value.ToString();
            return _spices;
        }



        public string RoomFeature()
        {
            string _feat;
            List<string> l = new List<string>();

            l.Add("an altar");
            l.Add("an altar");
            l.Add("an altar");
            l.Add("an arch");
            l.Add("an arch");
            l.Add("an arch");
            l.Add("a ceiling");
            l.Add("a ceiling");
            l.Add("a ceiling");
            l.Add("a ceiling");
            l.Add("a box");
            l.Add("a coffer");
            l.Add("a casket");
            l.Add("a dome");
            l.Add("a dome");
            l.Add("a dome");
            l.Add("a secret door");
            l.Add("a concealed door");
            l.Add("an archway");
            l.Add("an archway");
            l.Add("a fire");
            l.Add("a fire");
            l.Add("a fire");
            l.Add("a fireplace");
            l.Add("a fireplace");
            l.Add("a fireplace");
            l.Add("a force field");
            l.Add("a force field");
            l.Add("a force field");
            l.Add("a force field");
            l.Add("a fountain");
            l.Add("a fountain");
            l.Add("a fountain");
            l.Add("a furnishing");
            l.Add("a furnishing");
            l.Add("a furnishing");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an idol");
            l.Add("an illusion");
            l.Add("an illusion");
            l.Add("an illusion");
            l.Add("a machine");
            l.Add("a machine");
            l.Add("a machine");
            l.Add("a mirror");
            l.Add("a mirror");
            l.Add("a mirror");
            l.Add("a mirror");
            l.Add("a monster");
            l.Add("a monster");
            l.Add("a monster");
            l.Add("a mosaic");
            l.Add("a mosaic");
            l.Add("a mosaic");
            l.Add("a painting");
            l.Add("a painting");
            l.Add("a painting");
            l.Add("a painting");
            l.Add("a passage");
            l.Add("a passage");
            l.Add("a passage");
            l.Add("a pedestal");
            l.Add("a pedestal");
            l.Add("a pedestal");
            l.Add("a pillar/column");
            l.Add("a pillar/column");
            l.Add("a column");
            l.Add("a column");
            l.Add("a pit");
            l.Add("a pit");
            l.Add("a pit");
            l.Add("a pool");
            l.Add("a pool");
            l.Add("a pool");
            l.Add("a stairway");
            l.Add("a stairway");
            l.Add("a stairway");
            l.Add("a statue");
            l.Add("a statue");
            l.Add("a statue");
            l.Add("a tapestry");
            l.Add("a tapestry");
            l.Add("a tapestry");
            l.Add("a tapestry");
            l.Add("some vegetation");
            l.Add("some vegetation");
            l.Add("some vegetation");
            l.Add("a wall");
            l.Add("a wall");
            l.Add("a wall");
            l.Add("a well");
            l.Add("a well");
            l.Add("a well");
            l.Add("a well");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _feat = value.ToString();
            return _feat;
        }


        public string MagicAttribute()
        {
            string _attrib;
            List<string> l = new List<string>();

            l.Add("ages the user");
            l.Add("is animated");
            l.Add("is anti-magic");
            l.Add("asks a question");
            l.Add("attacks");
            l.Add("changes users class");
            l.Add("changes minds from one body to another");
            l.Add("changes sex");
            l.Add("collapses");
            l.Add("dances");
            l.Add("decreases ST");
            l.Add("decreases DX");
            l.Add("decreases IQ");
            l.Add("decreases ST");
            l.Add("decreases DX");
            l.Add("decreases IQ");
            l.Add("disappears at times");
            l.Add("disintegrates other items");
            l.Add("dispenses coins");
            l.Add("dispenses counterfeit coins");
            l.Add("dispenses counterfeit gems");
            l.Add("dispenses counterfeit jewellery");
            l.Add("dispenses counterfeit magic item");
            l.Add("dispenses counterfeit map");
            l.Add("dispenses gems");
            l.Add("dispenses jewellery");
            l.Add("dispenses magic item");
            l.Add("dispenses map");
            l.Add("distorts users weight");
            l.Add("distorts users height");
            l.Add("distorts in length");
            l.Add("distorts in width");
            l.Add("gives user an electric shock");
            l.Add("enlarges user");
            l.Add("enrages user");
            l.Add("is false");
            l.Add("turns flesh to stone");
            l.Add("foretells insignificant future events");
            l.Add("bears fruit");
            l.Add("turns user gaseous");
            l.Add("geases the user");
            l.Add("decreases users gravity");
            l.Add("increases users gravity");
            l.Add("induces greed in the user");
            l.Add("hovers");
            l.Add("increases ST");
            l.Add("increases ST");
            l.Add("increases DX");
            l.Add("increases DX");
            l.Add("increases IQ");
            l.Add("increases IQ");
            l.Add("is intelligent");
            l.Add("is invisible");
            l.Add("laughs");
            l.Add("is magnetic");
            l.Add("makes user younger");
            l.Add("moves");
            l.Add("nulls gravity");
            l.Add("is one way");
            l.Add("makes user opposite alignment");
            l.Add("pivots");
            l.Add("plays games");
            l.Add("points");
            l.Add("emits poison");
            l.Add("polymorphs user");
            l.Add("is of random alignment");
            l.Add("randomly acts");
            l.Add("reduces users size");
            l.Add("repels/repulses others");
            l.Add("resists magic");
            l.Add("reverses gravity");
            l.Add("grants reverse wish fulfilment");
            l.Add("speaks in riddles");
            l.Add("rises");
            l.Add("rolls");
            l.Add("shifts");
            l.Add("shoots");
            l.Add("sings");
            l.Add("is sinking");
            l.Add("is sliding");
            l.Add("is sloping");
            l.Add("is spinning");
            l.Add("steals other items");
            l.Add("suggests courses of action to user");
            l.Add("suspends animation");
            l.Add("is symbiotic");
            l.Add("takes items");
            l.Add("talks telekinetically to user");
            l.Add("talks in poetry and rhymes");
            l.Add("talks nonsense");
            l.Add("talks very intelligently");
            l.Add("casts spells");
            l.Add("teleports user");
            l.Add("has an unusual colour/texture/material");
            l.Add("has variable gravity");
            l.Add("grants wish fulfilment");
            l.Add("yells and screams");

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            _attrib = value.ToString();
            return _attrib;
        }

        public string GeneralColor()
        {
            string color;
            List<string> l = new List<string>();

            l.Add("red");
            l.Add("orange");
            l.Add("yellow");
            l.Add("green");
            l.Add("blue");
            l.Add("indigo");
            l.Add("violet");
            l.Add("black");
            l.Add("white");
            l.Add("pink");
            l.Add("purple");
            l.Add("cyan");
            l.Add("aqua");
            l.Add("brown");
            l.Add("grey");
            l.Add("ivory");
            l.Add("maroon");
            l.Add("magenta");
            l.Add("olive");
            l.Add("plum");
            l.Add("salmon");
            l.Add("silver");
            l.Add("plum");
            l.Add("seafoam");
            l.Add("tan");
            l.Add("turquoise");            

            Randomizer r = new Randomizer();
            int rand = r.RandNumber(1, l.Count);
            var value = l[rand];
            color = value.ToString();
            return color;
        }


    }
}
